name: release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - uses: r-lib/actions/setup-r-dependencies@v2

      - name: Setup C++ compiler requirements
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Build source package
        run: |
          R CMD build .
        shell: bash

      - name: Build binary package
        run: |
          R CMD INSTALL --build .
        shell: bash

      - name: Get package info
        id: package_info
        run: |
          PACKAGE_VERSION=$(grep "^Version:" DESCRIPTION | cut -d' ' -f2)
          PACKAGE_NAME=$(grep "^Package:" DESCRIPTION | cut -d' ' -f2)
          echo "version=${PACKAGE_VERSION}" >> $GITHUB_OUTPUT
          echo "name=${PACKAGE_NAME}" >> $GITHUB_OUTPUT
          echo "tarball=${PACKAGE_NAME}_${PACKAGE_VERSION}.tar.gz" >> $GITHUB_OUTPUT

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: ${{ steps.package_info.outputs.name }} ${{ steps.package_info.outputs.version }}
          draft: false
          prerelease: false
          body: |
            Release of ${{ steps.package_info.outputs.name }} version ${{ steps.package_info.outputs.version }}
            
            ## Installation
            
            ```r
            # Install from GitHub
            devtools::install_github("PawanRamaMali/edgemodelr")
            
            # Or download and install from source
            install.packages("${{ steps.package_info.outputs.tarball }}", repos = NULL, type = "source")
            ```
            
            ## Quick Start
            
            ```r
            library(edgemodelr)
            
            # List available models
            models <- edge_list_models()
            
            # Quick setup with a small model
            edge_quick_setup("TinyLlama-1.1B")
            
            # Load and use model
            ctx <- edge_load_model("tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf")
            result <- edge_completion(ctx, "Hello, how are you?", n_predict = 10)
            edge_free_model(ctx)
            ```

      - name: Upload Source Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.package_info.outputs.tarball }}
          asset_name: ${{ steps.package_info.outputs.tarball }}
          asset_content_type: application/gzip

      - name: Upload Binary Package (if exists)
        if: hashFiles('*.tgz') != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./${{ steps.package_info.outputs.name }}_${{ steps.package_info.outputs.version }}_R_x86_64-pc-linux-gnu.tar.gz
          asset_name: ${{ steps.package_info.outputs.name }}_${{ steps.package_info.outputs.version }}_linux_binary.tar.gz
          asset_content_type: application/gzip