name: Debug R Package

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  debug:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: List package files
        run: |
          echo "=== Package Structure ==="
          find . -type f -name "*.R" | head -20
          echo "=== DESCRIPTION ==="
          cat DESCRIPTION || echo "No DESCRIPTION found"
          echo "=== NAMESPACE ==="
          cat NAMESPACE || echo "No NAMESPACE found"
          echo "=== Makevars ==="
          cat src/Makevars || echo "No Makevars found"

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: 'release'

      - name: Check R installation
        run: |
          R --version
          which R
          echo "R_HOME: $R_HOME"

      - name: Install basic deps
        run: |
          install.packages("devtools")
          install.packages("rcmdcheck")
        shell: Rscript {0}

      - name: Try to load package files
        run: |
          cat("=== Testing R file loading ===\n")
          tryCatch({
            source("R/RcppExports.R")
            cat("✅ RcppExports.R loaded\n")
          }, error = function(e) cat("❌ RcppExports.R error:", e$message, "\n"))

          tryCatch({
            source("R/api.R")
            cat("✅ api.R loaded\n")
          }, error = function(e) cat("❌ api.R error:", e$message, "\n"))

          tryCatch({
            source("R/ollama.R")
            cat("✅ ollama.R loaded\n")
          }, error = function(e) cat("❌ ollama.R error:", e$message, "\n"))
        shell: Rscript {0}

      - name: Check DESCRIPTION parsing
        run: |
          desc <- read.dcf("DESCRIPTION")
          cat("Package name:", desc[,"Package"], "\n")
          cat("Imports:", desc[,"Imports"], "\n")
          cat("LinkingTo:", desc[,"LinkingTo"], "\n")
        shell: Rscript {0}

      - name: Try basic devtools operations
        run: |
          cat("=== Testing devtools operations ===\n")

          tryCatch({
            devtools::load_all(".")
            cat("✅ devtools::load_all() succeeded\n")
          }, error = function(e) {
            cat("❌ devtools::load_all() failed:", e$message, "\n")
            cat("Traceback:\n")
            traceback()
          })

          tryCatch({
            devtools::document(".")
            cat("✅ devtools::document() succeeded\n")
          }, error = function(e) {
            cat("❌ devtools::document() failed:", e$message, "\n")
          })
        shell: Rscript {0}

      - name: Show detailed error if compilation fails
        run: |
          cat("=== Attempting compilation ===\n")
          tryCatch({
            devtools::install(".", upgrade = "never")
            cat("✅ Package compiled and installed successfully\n")
          }, error = function(e) {
            cat("❌ Compilation failed:", e$message, "\n")
            cat("\n=== Checking compilation logs ===\n")
            if (file.exists("src")) {
              cat("Source files found:\n")
              list.files("src", recursive = TRUE)
            }
            if (file.exists("config.log")) {
              cat("\n=== Config log ===\n")
              readLines("config.log") |> head(50) |> cat(sep = "\n")
            }
          })
        shell: Rscript {0}
                
