name: R Package CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  release:
    types: [prereleased]
  workflow_dispatch:
    inputs:
      cran_submit:
        description: 'Submit to CRAN (type CONFIRM to proceed)'
        required: false
        default: ''

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  # Multi-platform build and test matrix
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          # Start with stable platforms using proven setup
          - {os: macos-latest, r: '4.2.1'}
          - {os: ubuntu-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}
          # Additional test configurations
          - {os: ubuntu-latest, r: 'devel'}
          - {os: ubuntu-latest, r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      # Use the proven working setup for macOS, standard for others
      - name: Set up R (macOS proven)
        if: runner.os == 'macOS'
        uses: r-lib/actions/setup-r@f57f1301a053485946083d7a45022b278929a78a
        with:
          r-version: ${{ matrix.config.r }}

      - name: Set up R (other platforms)
        if: runner.os != 'macOS'
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          use-public-rspm: true

      # Install system dependencies with proper error handling
      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            build-essential \
            libblas-dev \
            liblapack-dev \
            gfortran \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          # macOS usually has what we need, just ensure basics
          brew list

      - name: Install system dependencies (Windows)
        if: runner.os == 'Windows'
        run: |
          # Windows R usually comes with what we need
          echo "Windows setup complete"

      # Use proven dependency installation approach
      - name: Install R dependencies
        run: |
          install.packages(c("remotes", "rcmdcheck", "devtools"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      # Add session info for debugging
      - name: Session info
        run: |
          options(width = 100)
          utils::sessionInfo()
        shell: Rscript {0}

      # Use proven check approach
      - name: R CMD Check
        run: |
          rcmdcheck::rcmdcheck(args = "--no-manual", error_on = "error")
        shell: Rscript {0}

      # Additional validation only if basic check passes
      - name: Test Installation
        run: |
          devtools::install(upgrade = "never")
          library(edgemodelr)
          cat("âœ… Package loads successfully\n")
        shell: Rscript {0}

      - name: Upload check results
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}-r${{ matrix.config.r }}-results
          path: check

  # Documentation build (only after tests pass)
  pkgdown:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: R-CMD-check

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Install dependencies
        run: |
          install.packages(c("remotes", "pkgdown"))
          remotes::install_deps(dependencies = TRUE)
        shell: Rscript {0}

      - name: Build site
        run: pkgdown::build_site_github_pages(new_process = FALSE, install = FALSE)
        shell: Rscript {0}

      - name: Deploy to GitHub pages
        if: github.event_name != 'pull_request'
        uses: JamesIves/github-pages-deploy-action@v4.6.8
        with:
          clean: false
          branch: gh-pages
          folder: docs

  # CRAN submission workflow
  cran-submit:
    if: github.event_name == 'release' || (github.event_name == 'workflow_dispatch' && github.event.inputs.cran_submit == 'CONFIRM')
    runs-on: ubuntu-latest
    needs: R-CMD-check

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      - name: Final CRAN checks
        run: |
          install.packages(c("remotes", "rcmdcheck"))
          remotes::install_deps(dependencies = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning")
        shell: Rscript {0}

      - name: R Package CRAN Submission
        uses: coatless-actions/cran-submission@v1
        with:
          confirmation: ${{ github.event.inputs.cran_submit || 'CONFIRM' }}
                
